<!-- View/users.ejs -->
<%- include('partials/header') -%>
    <a href="/navigation" class="linkfake">navigation </a>

    <div class="container">
        <h1>User List</h1>
        <table id="userTable">
            <thead>
                <tr>
                    <th>Username</th>
                    <th>Email</th>
                    <th>Role</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody id="userBody">
                <!-- Người dùng sẽ được chèn vào đây -->
            </tbody>
        </table>
    </div>

    <!-- Modal để chỉnh sửa người dùng -->
    <div id="editModal" style="display: none;">
        <h2>Edit User</h2>
        <form id="editForm">
            <input type="hidden" id="editUserId">
            <label for="editUsername">Username</label>
            <input type="text" id="editUsername" name="username" required>

            <label for="editEmail">Email</label>
            <input type="email" id="editEmail" name="email" required>

            <label for="editPassword">Password</label>
            <input type="text" id="editPassword" name="password" required> <!-- Đổi thành type="text" -->

            <label for="editRole">Role</label>
            <select id="editRole" name="role" required>
                <option value="user">User</option>
                <option value="admin">Admin</option>
            </select>

            <button type="submit">Save</button>
            <button type="button" id="closeModal">Cancel</button>
        </form>
    </div>

    <!-- CSS và JavaScript như trước -->
    <style>
        /* styles.css */
        body {
            font-family: Arial, sans-serif;
            background-color: #f4f4f4;
            margin: 0;
            padding: 20px;
        }

        .container {
            max-width: 800px;
            margin: 0 auto;
            background: white;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        }

        h1 {
            text-align: center;
            color: #333;
        }

        table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 20px;
        }

        th,
        td {
            padding: 12px;
            text-align: left;
            border: 1px solid black;
        }

        th {
            background-color: #f2f2f2;
            color: #333;
        }

        tr:hover {
            background-color: #f9f9f9;
        }

        button {
            padding: 8px 12px;
            margin-right: 5px;
            border: none;
            border-radius: 4px;
            background-color: #5cb85c;
            color: white;
            cursor: pointer;
            transition: background-color 0.3s;
        }

        button:hover {
            background-color: #4cae4c;
        }

        #editModal {
            position: fixed;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.5);
            display: flex;
            align-items: center;
            justify-content: center;
        }

        #editModal h2 {
            margin-top: 0;
        }

        #editForm {
            background: white;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.2);
        }

        label {
            display: block;
            margin: 10px 0 5px;
        }

        input[type="text"],
        input[type="email"],
        select {
            width: 100%;
            padding: 8px;
            margin-bottom: 10px;
            border: 1px solid #ccc;
            border-radius: 4px;
        }

        button#closeModal {
            background-color: #d9534f;
        }

        button#closeModal:hover {
            background-color: #c9302c;
        }
    </style>

    <script>
        async function fetchUsers() {
            const response = await fetch('/api/users');
            const users = await response.json();
            const userBody = document.getElementById('userBody');
            userBody.innerHTML = ''; // Xóa nội dung hiện tại

            users.forEach(user => {
                const row = document.createElement('tr');
                row.innerHTML = `
                <td>${user.username}</td>
                <td>${user.email}</td>
                <td>${user.role}</td>
                <td>
                    <button onclick="openEditModal('${user._id}', '${user.username}', '${user.email}', '${user.role}')">Edit</button>
                    <button onclick="deleteUser('${user._id}')">Delete</button>
                </td>
            `;
                userBody.appendChild(row);
            });
        }

        function openEditModal(id, username, email, role) {
            document.getElementById('editUserId').value = id;
            document.getElementById('editUsername').value = username;
            document.getElementById('editEmail').value = email;
            document.getElementById('editRole').value = role;
            document.getElementById('editModal').style.display = 'block';
        }

        document.getElementById('editForm').addEventListener('submit', async function (e) {
            e.preventDefault();
            const id = document.getElementById('editUserId').value;
            const username = document.getElementById('editUsername').value;
            const email = document.getElementById('editEmail').value;
            const role = document.getElementById('editRole').value;
            const password = document.getElementById('editPassword').value; // Lấy mật khẩu

            const response = await fetch(`/api/users/${id}`, {
                method: 'PUT',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ username, email, role, password }), // Gửi mật khẩu
            });

            if (response.ok) {
                alert('User updated successfully!');
                fetchUsers(); // Cập nhật danh sách người dùng
                closeEditModal();
            } else {
                alert('Failed to update user.');
            }
        });

        async function deleteUser(id) {
            if (confirm('Are you sure you want to delete this user?')) {
                const response = await fetch(`/api/users/${id}`, {
                    method: 'DELETE',
                });

                if (response.ok) {
                    alert('User deleted successfully!');
                    fetchUsers(); // Cập nhật danh sách người dùng
                } else {
                    alert('Failed to delete user.');
                }
            }
        }

        document.getElementById('closeModal').addEventListener('click', function () {
            closeEditModal();
        });

        function closeEditModal() {
            document.getElementById('editModal').style.display = 'none';
        }

        // Tải danh sách người dùng khi trang được tải
        fetchUsers();
    </script>

    <%- include('partials/footer') -%>